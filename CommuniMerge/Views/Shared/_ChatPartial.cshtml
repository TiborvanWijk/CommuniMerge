@using CommuniMerge.Library.Data.Dtos
@using CommuniMerge.ViewModels;
@using Newtonsoft.Json
@using System.Text
@model IndexView;

<nav class="nav">
    <section class="side-nav">
        <div></div>
        <ul class="options">
            <li class="option" onclick="openFriendsMenu()"><i class="fa-solid fa-user-group"></i></i></li>
            <li class="option" onclick="openGroupCreationMenu()"><i class="fa-regular fa-message create"></i></li>
            <li class="option" onclick="openSettingsMenu()"><i class="fa-solid fa-gears"></i></i></li>
        </ul>


        <div class="user-actions">

            <figure class="profileIcon" onclick="openProfileMenu()">
                <img src="@Model.CurrentUser.ProfilePath" alt="" srcset="">
            </figure>
            <a href="Authorize/logout" class="logout"><i class="fa-solid fa-right-from-bracket"></i></a>
        </div>
    </section>

    <section class="main-holder">
        <div class="title">
            <h2>Chats</h2>
        </div>
        <div class="searchbar-big-holder nav-search-holder">
            <i class="fa-solid fa-magnifying-glass search-btn nav-search-btn"></i>
            <input class="nav-search searchbar-big" type="text" name="chat-search" id="chat-search" placeholder="Zoeken" autocomplete="off">
        </div>

        <div class="message-listingHolder">
            <ul class="message-list" id="user-list">
                @{

                    var combinedList = Model.Friends.Select(friend => new { Item = (object)friend, Timestamp = friend.LatestMessage?.TimeStamp })
                    .Concat(Model.Groups.Select(group => new { Item = (object)group, Timestamp = group.LatestMessage?.TimeStamp }));

                    var sortedList = combinedList.OrderByDescending(item => item.Timestamp);

                    foreach (var item in sortedList)
                    {
                        if (item.Item is FriendDisplayDto friend)
                        {
                            var friendJson = JsonConvert.SerializeObject(friend);
                            <li class="message-item" data-chat="@friend.Username/@Model.CurrentUser.Username" onclick="openPersonalConversation(this, @friendJson)">
                                <header class="message-profile-header">
                                    <figure class="message-profile user1">
                                        <img src="@Model.CurrentUser.ProfilePath" alt="" srcset="" draggable="false">
                                    </figure>
                                    <figure class="message-profile user2">
                                        <img src="@friend.ProfilePath" alt="" srcset="" draggable="false">
                                    </figure>
                                </header>
                                <div class="message-information">
                                    <h3>@Model.CurrentUser.Username & @friend.Username</h3>
                                    @{
                                        if (friend.LatestMessage != null)
                                        {
                                            if (friend.LatestMessage.FilePath != null)
                                            {
                                                <p class="truncate"><i class="fa-solid fa-image"></i> @friend.LatestMessage.Content</p>

                                            }
                                            else
                                            {
                                                <p class="truncate">@friend.LatestMessage.Content</p>
                                                
                                            }
                                        }
                                    }
                                </div>
                            </li>
                        }
                        else if (item.Item is GroupDto group)
                        {
                            var groupJson = JsonConvert.SerializeObject(group);
                            <li class="message-item" data-group-id="@group.Id" onclick="openGroupConversation(this, @groupJson)">
                                <header class="group-profile-header">
                                    <figure class="group-profile">
                                        <img src="@group.ProfilePath" alt="" srcset="" draggable="false">
                                    </figure>
                                </header>
                                <div class="message-information">
                                    <h3>@group.Name</h3>
                                    @{
                                        if (group.LatestMessage.FilePath != null)
                                        {
                                            <p class="truncate"><i class="fa-solid fa-image"></i> @group.LatestMessage.Content</p>

                                        }
                                        else
                                        {
                                            <p class="truncate">@group.LatestMessage.Content</p>

                                        }
                                    }
                                </div>
                            </li>
                        }
                    }
                }

            </ul>
        </div>




    </section>
    
    <section class="menu-background" id="menu-background" onclick="hideMenu()">
        <div class="menu-popup" id="menu-popup">
            <header class="menu-header">
                <button class="close-btn" onclick="hideMenu()"><i class="fa-solid fa-xmark"></i></button>
                
                <h2 class="menu-header-title" id="menu-header-title"></h2>
            </header>


            <div class="menu-body menu-body-add-friends" id="add-friend-menu">
                
                <button class="friends-back-btn" onclick="openFriendsMenu()"><i class="fa-solid fa-arrow-left"></i></button>

                <h3 class="body-info-title">Add your friend by username</h3>
                <div class="add-friend-input-holder" id="add-friend-input-holder">
                    <input class="menu-form-field" type="text" placeholder="your friends username" id="friendRequestInput" autocomplete="off">
                </div>

                <input type="submit" class="submit-btn menu-submit-btn" id="sendFriendRequestBtn" value="Send friend request">
            </div>

            <div class="menu-body menu-body-friends-overview" id="friendsOverView">
                
                <div class="friend-menu-buttons-holder" >
                    <button class="cta-btn friendRequest-btn" onclick="openFriendRequestMenu()">friend requests</button>
                    <button class="cta-btn add-btn" id="open-friendAddMenu" onclick="openFriendAddMenu()">
                        Add friend
                    </button>
                </div>

                <ul class="friends-list">

                    @{
                        foreach(var friend in Model.Friends)
                        {
                            
                        <li class="friend-list-item">
                            <p>@friend.Username</p>
                            <button class="friend-option"><i class="fa-solid fa-ellipsis-vertical"></i></button>
                        </li>
                        }
                    }
                </ul>

            </div>

            <div class="menu-body menu-body-friendRequest-overview" id="friendRequestOverView">

                <button class="friends-back-btn" onclick="openFriendsMenu()"><i class="fa-solid fa-arrow-left"></i></button>

                <ul class="friendRequests-list" id="friendRequest-list">

                    @{
                        foreach (var friendRequest in Model.FriendRequests)
                        {

                            <li class="friendRequest-list-item" data-user="@friendRequest.Sender.Username">
                                <p>@friendRequest.Sender.Username</p>
                                <div class="friend-request-option-holder">
                                    <button class="friend-request-option accept" onclick="acceptFriendRequest('@friendRequest.Sender.Username')"><i class="fa-solid fa-check"></i></button>
                                    <button class="friend-request-option decline" onclick="declineFriendRequest('@friendRequest.Sender.Username')"><i class="fa-solid fa-xmark"></i></button>
                                </div>
                            </li>
                        }
                    }
                </ul>
            </div>


            <div class="menu-body menu-body-groupCreate-menu" id="groupCreate">
                

                <div class="searchbar-big-holder" id="create-group-searchbar-holder">
                    <i class="fa-solid fa-magnifying-glass search-btn create-group-search-btn"></i>
                    <input class="searchbar-big create-group-search" type="text" name="chat-search" id="group-create-friend-search" placeholder="Zoeken" autocomplete="off">
                </div>

                <ul class="group-add-friends-list" id="group-add-friends-list">

                </ul>
                

                <footer class="create-group-footer">
                    <button class="cta-btn create-group-btn" onclick="openGroupSettingsMenu()">Group settings</button>
                </footer>
            </div>

            <div class="menu-body group-create-info-menu" id="groupInfoCreate">
                <button class="friends-back-btn" onclick="showGroupCreationMenu()"><i class="fa-solid fa-arrow-left" aria-hidden="true"></i></button>
                
                <div class="profile-holder">
                    <input type="file" id="group-image-input" accept="image/*,video/*" />
                    <i class="fa-solid fa-users-viewfinder" id="open-file-group-create-btn"></i>

                </div>

                <input type="text" id="groupname" name="groupname" class="form-field form-field-dark" placeholder="Group name"/>


                <footer class="create-group-footer">
                    <button class="cta-btn create-group-btn">Create group</button>
                </footer>
            </div>


        </div>

    </section>


</nav>