@using CommuniMerge.ViewModels;
@model IndexView;

<nav class="nav">
    <section class="side-nav">
        <div></div>
        <ul class="options">
            <li class="option" onclick="openFriendsMenu()"><i class="fa-solid fa-user-group"></i></i></li>
            <li class="option" onclick="openGroupCreationMenu('@Model.CurrentUserUsername')"><i class="fa-regular fa-message create"></i></li>
            <li class="option"><i class="fa-solid fa-gears"></i></i></li>
        </ul>


        <div class="user-actions">

            <figure class="profileIcon">
                <img src="~/img/profile.jpg" alt="" srcset="">
            </figure>
            <a href="Authorize/logout" class="logout"><i class="fa-solid fa-right-from-bracket"></i></a>
        </div>
    </section>

    <section class="main-holder">
        <div class="title">
            <h2>Chats</h2>
        </div>
        <div class="nav-search">
            <i class="fa-solid fa-magnifying-glass search-btn"></i>
            <input class="nav-searchbar" type="text" name="chat-search" id="chat-search" placeholder="Zoeken">
        </div>

        <div class="message-listingHolder">
            <ul class="message-list" id="user-list">
                @{
                    foreach (var friend in Model.Friends)
                    {

                        <li class="message-item" data-chat="@friend.Username/@Model.CurrentUserUsername" onclick="openConversation(this, '@friend.Username')">

                            <header class="message-profile-header">
                                <figure class="message-profile user1">
                                    <img src="~/img/profile.jpg" alt="" srcset="" draggable="false">
                                </figure>
                                <figure class="message-profile user2">
                                    <img src="~/img/doggy.jpg" alt="" srcset="" draggable="false">
                                </figure>
                            </header>
                            <div class="message-information">
                                <h3>@Model.CurrentUserUsername & @friend.Username</h3>
                                @{
                                    if (friend.LatestMessage != null)
                                    {
                                        <p class="truncate">@friend.LatestMessage.Content</p>
                                    }
                                }
                            </div>
                        </li>
                    }
                }

            </ul>
        </div>




    </section>
    
    <section class="menu-background" id="menu-background" onclick="hideMenu()">
        <div class="menu-popup" id="menu-popup">
            <header class="menu-header">
                <button class="close-btn" onclick="hideMenu()"><i class="fa-solid fa-xmark"></i></button>
                
                <h2 class="menu-header-title" id="menu-header-title">Friends</h2>
            </header>


            <div class="menu-body" id="add-friend-menu">
                
                <button class="friends-back-btn" onclick="openFriendsMenu()"><i class="fa-solid fa-arrow-left"></i></button>

                <h3 class="body-info-title">Add your friend by username</h3>
                <div class="add-friend-input-holder" id="add-friend-input-holder">
                    <input class="menu-form-field" type="text" placeholder="your friends username" id="friendRequestInput">
                </div>

                <input type="submit" class="submit-btn menu-submit-btn" id="sendFriendRequestBtn" value="Send friend request">
            </div>

            <div class="menu-body-friends-overview" id="friendsOverView">
                
                <div class="friend-menu-buttons-holder" >
                    <button class="friendRequest-btn" onclick="openFriendRequestMenu()">friend requests</button>
                    <button class="add-btn" id="open-friendAddMenu">
                        Add friend
                    </button>
                </div>

                <ul class="friends-list">

                    @{
                        foreach(var friend in Model.Friends)
                        {
                            
                        <li class="friend-list-item">
                            <p>@friend.Username</p>
                            <button class="friend-option"><i class="fa-solid fa-ellipsis-vertical"></i></button>
                        </li>
                        }
                    }
                </ul>

            </div>

            <div class="menu-body-friendRequest-overview" id="friendRequestOverView">

                <button class="friends-back-btn" onclick="openFriendsMenu()"><i class="fa-solid fa-arrow-left"></i></button>

                <ul class="friendRequests-list" id="friendRequest-list">

                    @{
                        foreach (var friendRequest in Model.FriendRequests)
                        {

                            <li class="friendRequest-list-item" data-user="@friendRequest.SenderUsername">
                                <p>@friendRequest.SenderUsername</p>
                                <div class="friend-request-option-holder">
                                    <button class="friend-request-option accept" onclick="acceptFriendRequest('@friendRequest.SenderUsername')"><i class="fa-solid fa-check"></i></button>
                                    <button class="friend-request-option decline" onclick="declineFriendRequest('@friendRequest.SenderUsername')"><i class="fa-solid fa-xmark"></i></button>
                                </div>
                            </li>
                        }
                    }
                </ul>
            </div>

        </div>

    </section>


</nav>